<html>
    <head>
        <title>Canvas drawing</title>
    </head>
    <body bgcolor="#333">
        <canvas id="gauge"></canvas>

        <script type="text/javascript">
            (function(){
                window.onload = function(){

                    let canvas = document.querySelector("#gauge");
                    canvas.width = 640;
                    canvas.height = 400;
                    let context = canvas.getContext("2d");
                    let toAngle = 0;
                    let currentAngle = 0;

                    function drawCalibrations(threshold = 50){
                        context.save()
                        
                        context.lineWidth = 0.3;
                        context.strokeStyle = '#ccc'
                        let i = 0;
                        let increment = 180/threshold
                        while(i <= 180+increment){
                            context.save()
                            
                            
                            context.beginPath()
                            context.translate((canvas.width / 2), canvas.height)
                            context.rotate(i * (Math.PI / 180) - Math.PI/2);
                            context.translate(-1 * (canvas.width / 2), -1 * canvas.height);
                            if (Math.round(i / increment) % 10 ===0 || i === 0) {
                                context.strokeStyle = '#fff'
                                context.lineWidth = 1;
                                context.font = "13px ebrima 200";
                                let text = Math.round(i / increment).toString();
                                let size = context.measureText(text).width
                                context.strokeText(text, canvas.width / 2 - (size/2), canvas.height - (canvas.width / 2) + 90)
                            }
                            context.moveTo(canvas.width / 2, canvas.height - (canvas.width / 2) + 35)
                            context.lineTo(canvas.width / 2, canvas.height - (canvas.width / 2) + 50)
                            context.stroke()
                            context.restore()
                            i+=increment
                        }
                        

                        context.restore()
                    }
                    function drawReadings(){
                        context.lineWidth = '7'
                        context.strokeStyle = "#3599E8";
                        context.arc(canvas.width / 2, canvas.height, (canvas.width / 2) - 30, -Math.PI, -0.5*Math.PI);
                        context.stroke();

                        context.beginPath()
                        context.strokeStyle = "orange";
                        context.arc(canvas.width / 2, canvas.height, (canvas.width / 2) - 30, -0.5 * Math.PI, -0.25 * Math.PI);
                        context.stroke()
                        
                        context.beginPath()
                        context.strokeStyle = "red";
                        context.arc(canvas.width / 2, canvas.height, (canvas.width / 2)-30 , -0.25 * Math.PI, 0);
                        context.stroke()
                    }
                    function start(){
                        context.clearRect(0, 0, canvas.width, canvas.height)
                        let arc = new Path2D();
                        let tick = new Path2D()
                        arc.arc(canvas.width / 2, canvas.height, canvas.width / 2, 0, Math.PI, true);
                        context.fillStyle = '#222';
                        context.fill(arc)

                        context.save()
                        drawReadings()
                        context.restore()
                        context.stroke()

                        drawCalibrations()

                        context.save()
                        context.translate((canvas.width / 2), canvas.height)
                        context.rotate(-1 * (Math.PI / 2) + (Math.PI / 180) * currentAngle)
                        context.translate(-1 * (canvas.width / 2), -1 * canvas.height)

                        let diff = toAngle - currentAngle;
                        
                        if(diff < 0 && Math.abs(diff) >= 1){
                            currentAngle -= 1
                        }else if(diff >= 1){
                            currentAngle += 1
                        }else{
                            currentAngle = toAngle;
                        }
                        
                        context.fillStyle = 'red';
                        context.strokeStyle = '#ccc';
                        context.lineWidth = '2'
                        tick.arc(canvas.width / 2, canvas.height, 50, 0, Math.PI * 2, true);
                        context.beginPath()
                        tick.moveTo(canvas.width / 2, canvas.height)
                        tick.lineTo(canvas.width / 2, canvas.height - (canvas.width/2)+40)
                        context.stroke(tick);

                        context.fill(tick)
                        context.restore()
                        requestAnimationFrame(start)
                    }

                    function startwebSocket(){
                        let ws = new WebSocket("ws://localhost:8080");
                        const connectionOpen = function(){
                            console.log('connection opened')
                        }

                        const incomingMessage = function (m) {
                            let data = (m.data < 200)? 200 - m.data : 0;
                            let compassReading = 50 * (data)/200;
                            toAngle = (compassReading/50) * 180
                        }

                        const connectionClose = function () {
                            console.log('connection closed')
                        }

                        ws.addEventListener("open", connectionOpen);
                        ws.addEventListener("message", incomingMessage);
                        ws.addEventListener("close", connectionClose);
                    }
                    // setInterval(()=>{
                    //     toAngle = Math.ceil(Math.random() * 180);
                    // }, 3000);

                    startwebSocket()
                    start()
                }
            }())
        </script>
    </body>
</html>